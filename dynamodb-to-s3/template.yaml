AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  analytics-data-ingestion

Parameters:

  pS3Bucket:
    Type: String
    Default: ddb2s3-datalake

  pOLTPDatasource:
    Type: String
    Default: backoffice

  pOLTPTableName:
    Type: String
    Default: customers_subscriptions


# More info about Globals options: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: python3.8
    Tracing: Active
    Handler: app.lambda_handler
    Environment:
      Variables:
        POWERTOOLS_LOGGER_SAMPLE_RATE: 1
        POWERTOOLS_LOGGER_LOG_EVENT: true
        POWERTOOLS_METRICS_NAMESPACE: data-ingestion
        LOG_LEVEL: INFO

# Mor info about supported Resource Types: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#resource-types
Resources:
  DataLakeS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref pS3Bucket
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref pOLTPTableName
      AttributeDefinitions:
        - AttributeName: document
          AttributeType: S
      KeySchema:
        - AttributeName: document
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  DataGeneratorFunction:
    DependsOn: DynamoDBTable
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: data-ingestion-dynamodb-data-generator
      Description: Generates random data to DynamoDB Table
      CodeUri: data_generator/build/
      Layers:
        - !Ref PythonFakerLayerVersion
        - !Ref PythonAWSLambdaPowertoolsLayerVersion
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: data-ingestion-dynamodb-data-generator
          DDB_TABLE: !Ref pOLTPTableName
      Events:
        Scheduler:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
            Name: DataGeneratorScheduler
            Enabled: True

  DataGeneratorFunctionAdditionalPermission:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: root
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: dynamodb:PutItem
            Resource: !GetAtt DynamoDBTable.Arn
      Roles:
        - !Ref DataGeneratorFunctionRole

  DynamoDBTableStreamProcessorFunction:
    DependsOn:
      - DynamoDBTable
      - DataLakeS3Bucket
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: data-ingestion-dynamodb-stream-processor
      Description: Ingest data from DynamoDB Table to S3 Raw Data Bucket
      CodeUri: stream_processor/build/
      Timeout: 60
      Layers:
        - !Ref PythonAWSLambdaPowertoolsLayerVersion
        - !Ref PythonAWSWranglerLayerVersion
        - !Ref PythonDynamoDBJsonLayerVersion
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: data-ingestion-dynamodb-stream-processor
          TARGET_BUCKET: !Ref pS3Bucket
          DATA_SOURCE: !Ref pOLTPDatasource
          TABLE_NAME: !Ref pOLTPTableName
      Events:
        DynamoDBTableStream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt DynamoDBTable.StreamArn
            StartingPosition: LATEST
            BatchSize: 100
            Enabled: true
            MaximumRetryAttempts: 1

  DynamoDBTableStreamProcessorFunctionAdditionalPermission:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: root
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - athena:StartQueryExecution
              - athena:GetQueryExecution
              - dynamodb:ListStreams
              - dynamodb:GetShardIterator
              - dynamodb:DescribeStream
              - dynamodb:GetRecords
            Resource: "*"
          - Effect: Allow
            Action: s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${pS3Bucket}/*"
              - !Sub "arn:aws:s3:::aws-athena-query-results-${AWS::AccountId}-${AWS::Region}/*"
          - Effect: Allow
            Action:
              - glue:GetDatabase
              - glue:GetTable
              - glue:BatchCreatePartition
              - glue:CreateDatabase
              - glue:CreateTable
              - glue:CreatePartition
              - glue:UpdatePartition
              - glue:UpdateTable
            Resource:
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/*/*"
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/*"
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog"

      Roles:
        - !Ref DynamoDBTableStreamProcessorFunctionRole

  PythonAWSWranglerLayerVersion:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: PythonAWSWrangler
      ContentUri: layers/awswrangler/awswrangler-layer-1.6.3-py3.8.zip
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Delete

  PythonFakerLayerVersion:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: PythonFaker
      ContentUri: layers/Faker/build/
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Delete

  PythonDynamoDBJsonLayerVersion:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: PythonDynamoDBJson
      ContentUri: layers/dynamodb-json/build/
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Delete

  PythonAWSLambdaPowertoolsLayerVersion:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: PythonAWSLambdaPowertools
      ContentUri: layers/aws-lambda-powertools/build/
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Delete

Outputs:

  DataGeneratorFunction:
    Value: !GetAtt DataGeneratorFunction.Arn

  DynamoDBTableStreamProcessorFunction:
    Value: !GetAtt DynamoDBTableStreamProcessorFunction.Arn

  DataLakeS3Bucket:
    Value: !GetAtt DataLakeS3Bucket.Arn

  DynamoDBTable:
    Value: !GetAtt DynamoDBTable.Arn
